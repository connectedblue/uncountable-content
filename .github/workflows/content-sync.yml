name: WordPress Content Sync and Release

on:
  schedule:
    # Run every 6 hours to check for new content
    - cron: '0 */6 * * *'
  workflow_dispatch:
    inputs:
      sync_type:
        description: 'Type of sync to perform'
        required: false
        default: 'incremental'
        type: choice
        options:
        - incremental
        - full
      days:
        description: 'Days to look back (for incremental sync)'
        required: false
        default: '30'
        type: string

jobs:
  wordpress-content-sync:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for pushing commits and creating releases
      packages: write  # Required for creating releases
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for proper git operations
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Configure git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action (WordPress Content Sync)"
      
      - name: Run WordPress content sync (incremental)
        if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.sync_type == 'incremental')
        run: |
          days="${{ github.event.inputs.days || '30' }}"
          echo "Running incremental sync (last ${days} days)..."
          npm run package -- --days="${days}"
      
      - name: Run WordPress content sync (full - manual only)
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.sync_type == 'full'
        run: |
          echo "Running full content sync..."
          npm run full
          npm run package -- --days=365  # Package all content for full sync
      
      - name: Check for content changes and archive creation
        id: changes
        run: |
          # Check if any archives were created (indicates content changes)
          if ls archives/wordpress-content-*.tar.gz 1> /dev/null 2>&1; then
            echo "changes=true" >> $GITHUB_OUTPUT
            # Get the most recent archive
            archive_file=$(ls -t archives/wordpress-content-*.tar.gz | head -n1)
            echo "archive_file=${archive_file}" >> $GITHUB_OUTPUT
            echo "archive_name=$(basename ${archive_file})" >> $GITHUB_OUTPUT
            
            # Get file statistics
            file_count=$(find content -name "*.md" | wc -l)
            total_size=$(du -sh content/ | cut -f1)
            archive_size=$(du -sh "${archive_file}" | cut -f1)
            
            echo "file_count=${file_count}" >> $GITHUB_OUTPUT
            echo "total_size=${total_size}" >> $GITHUB_OUTPUT
            echo "archive_size=${archive_size}" >> $GITHUB_OUTPUT
            
            # Determine sync type for release notes
            sync_type="${{ github.event.inputs.sync_type || 'incremental' }}"
            days="${{ github.event.inputs.days || '30' }}"
            echo "sync_type=${sync_type}" >> $GITHUB_OUTPUT
            echo "days=${days}" >> $GITHUB_OUTPUT
            
            echo "Archive created: ${archive_file}"
            echo "Content: ${file_count} files (${total_size}), Archive: ${archive_size}"
            echo "Note: Content changes have already been committed by package command"
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected - no archive created"
          fi
      
      - name: Generate release information
        if: steps.changes.outputs.changes == 'true'
        id: release_info
        run: |
          timestamp=$(date +'%Y%m%d-%H%M')
          
          if [ "${{ steps.changes.outputs.sync_type }}" = "full" ]; then
            release_tag="full-sync-${timestamp}"
            release_title="Full Content Sync $(date +'%Y-%m-%d %H:%M')"
            
            cat > release_body.md << 'EOF'
          **Full WordPress Content Sync**

          This release contains a complete refresh of all WordPress content.
          
          **Content Statistics:**
          - **Files:** ${{ steps.changes.outputs.file_count }} markdown files
          - **Content Size:** ${{ steps.changes.outputs.total_size }}
          - **Archive Size:** ${{ steps.changes.outputs.archive_size }}
          - **Sync Type:** Manual full sync
          - **Timestamp:** $(date +'%Y-%m-%d %H:%M:%S UTC')
          
          **Changes:**
          Complete content refresh from all configured WordPress sites:
          - My Thoughts (https://thoughts.uncountable.uk)
          - My Diary (https://diary.uncountable.uk)
          
          All content has been regenerated and committed to version control.
          
          **Integration:**
          Download the `${{ steps.changes.outputs.archive_name }}` archive for integration with the main Astro application.
          
          **Commit:** ${{ github.sha }}
          EOF
          else
            release_tag="content-${timestamp}"
            release_title="Content Update $(date +'%Y-%m-%d %H:%M')"
            
            cat > release_body.md << 'EOF'
          **WordPress Content Update**

          Automated content sync for recent changes (last ${{ steps.changes.outputs.days }} days).
          
          **Content Statistics:**
          - **Files:** ${{ steps.changes.outputs.file_count }} markdown files  
          - **Content Size:** ${{ steps.changes.outputs.total_size }}
          - **Archive Size:** ${{ steps.changes.outputs.archive_size }}
          - **Sync Period:** Last ${{ steps.changes.outputs.days }} days
          - **Timestamp:** $(date +'%Y-%m-%d %H:%M:%S UTC')
          
          **Changes:**
          Recent WordPress content updates from configured sites:
          - My Thoughts (https://thoughts.uncountable.uk)
          - My Diary (https://diary.uncountable.uk)
          
          Changes have been committed to the repository for version control.
          
          **Integration:**
          Download the `${{ steps.changes.outputs.archive_name }}` archive for integration with the main Astro application.
          
          **Commit:** ${{ github.sha }}
          EOF
          fi
          
          echo "release_tag=${release_tag}" >> $GITHUB_OUTPUT
          echo "release_title=${release_title}" >> $GITHUB_OUTPUT
      
      - name: Create GitHub release
        if: steps.changes.outputs.changes == 'true'
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.changes.outputs.archive_file }}
          tag_name: ${{ steps.release_info.outputs.release_tag }}
          name: ${{ steps.release_info.outputs.release_title }}
          body_path: release_body.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Archive cleanup
        if: steps.changes.outputs.changes == 'true'
        run: |
          echo "Cleaning up old archive files..."
          # Keep only the 5 most recent archives to prevent storage bloat
          ls -t archives/wordpress-content-*.tar.gz | tail -n +6 | xargs -r rm -f
          echo "Archive cleanup completed"
      
      - name: Workflow summary
        run: |
          if [ "${{ steps.changes.outputs.changes }}" = "true" ]; then
            sync_type="${{ steps.changes.outputs.sync_type }}"
            days="${{ steps.changes.outputs.days }}"
            
            echo "## WordPress Content Sync Completed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Sync Type:** ${sync_type}" >> $GITHUB_STEP_SUMMARY
            echo "**Period:** Last ${days} days" >> $GITHUB_STEP_SUMMARY
            echo "**Files:** ${{ steps.changes.outputs.file_count }} markdown files" >> $GITHUB_STEP_SUMMARY
            echo "**Content Size:** ${{ steps.changes.outputs.total_size }}" >> $GITHUB_STEP_SUMMARY
            echo "**Archive:** ${{ steps.changes.outputs.archive_name }} (${{ steps.changes.outputs.archive_size }})" >> $GITHUB_STEP_SUMMARY
            echo "**Release:** ${{ steps.release_info.outputs.release_tag }}" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Archive created and GitHub release published successfully!" >> $GITHUB_STEP_SUMMARY
          else
            echo "## WordPress Content Sync - No Changes" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "No content changes detected during sync. Archive creation and release skipped." >> $GITHUB_STEP_SUMMARY
            sync_type="${{ github.event.inputs.sync_type || 'incremental' }}"
            days="${{ github.event.inputs.days || '30' }}"
            echo "**Sync Type:** ${sync_type}" >> $GITHUB_STEP_SUMMARY
            echo "**Period:** Last ${days} days" >> $GITHUB_STEP_SUMMARY
            echo "**Status:** All content up to date" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Timestamp:** $(date +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
